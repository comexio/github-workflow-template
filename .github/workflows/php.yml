name: "CI/CD - PHP"

on:
  workflow_call:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  REPO_NAME: ${{github.event.repository.name}}
  SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
  
jobs:
  create-feature-candidate:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}
    # continue-on-error: true
    steps:
      - name: Create feature candidate
        uses: comexio/github-create-fc-workflow@main
  
  unit-test:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/feature') != true
    # continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Unit Tests
        uses: comexio/github-unit-tests-workflow@main
        with:
          CICD_GITHUB_TOKEN: ${{ secrets.CICD_GITHUB_TOKEN }}
          CICD_AWS_KEY: ${{ secrets.CICD_AWS_KEY }}
          CICD_AWS_SECRET: ${{ secrets.CICD_AWS_SECRET }}
          REGION: sa-east-1
          APP_CONTAINER_NAME: ${{ secrets.APP_CONTAINER_NAME }}
  
  sonar-scan:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/feature') != true
    needs: unit-test
    # continue-on-error: true
    steps:
      - name: Run Sonar Scanner
        uses: comexio/github-sonar-scan-workflow@main
        with:
          github-repo-name: ${{ github.event.repository.name }}
          CICD_GITHUB_TOKEN: ${{ secrets.CICD_GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  release-candidate:
    if: ${{ startsWith(github.ref, 'refs/heads/fc') }}
    outputs:
      tag: ${{ steps.create_rc.outputs.tag }}
    # needs: sonar-scan
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Candidate
        id: create_rc
        uses: comexio/github-create-rc-workflow@main
        with:
          ORIGIN: "fc"
          CICD_GITHUB_TOKEN: ${{ secrets.CICD_GITHUB_TOKEN }}

  hotfix:
    if: ${{ startsWith(github.ref, 'refs/heads/hotfix') }}
    # needs: sonar-scan
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Candidate
        id: create_rc
        uses: comexio/github-create-rc-workflow@main
        with:
          ORIGIN: "hotfix"
          CICD_GITHUB_TOKEN: ${{ secrets.CICD_GITHUB_TOKEN }}

  feature-deploy:
    needs: release-candidate
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/fc') }}
    environment: homol
    steps:
    - name: Flow Deploy
      uses: comexio/github-deploy-workflow@main
      with:
        AWS_ACCESS_KEY_ID: ${{ secrets.CICD_AWS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.CICD_AWS_SECRET }}
        AWS_REGION: ${{ vars.CICD_AWS_REGION }}
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        ENV_FILE_PATH: ${{ secrets.ENV_FILE_PATH }}
        ENV_ENCRYPTION_PASSWORD: ${{ secrets.CICD_ENV_ENCRYPTION_PASSWORD }}
        ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
        IMAGE_NAME: ${{ vars.IMAGE_NAME }}
        DOCKERFILE_PATH: ${{ vars.DOCKERFILE_PATH }}
        BASE_IMAGE: ${{ vars.BASE_IMAGE }}
        DEPLOY_FILES: ${{ vars.DEPLOY_FILES }}
        SERVER_LIST: ${{ vars.SERVER_LIST }}
        SSH_USER: ubuntu
        SSH_KEY_FILE: ${{ secrets.CICD_SSH_KEY }}
        OVPN_CONFIG_FILE: ${{ secrets.OVPN_CONFIG_FILE_DEVOPS }}
        OVPN_CERT_PASS: ${{ secrets.OVPN_CERT_PASS_DEVOPS }}
        ORIGIN: fc
        GITHUB_TOKEN: ${{ secrets.LOGFLOW_CICD_WORKFLOWS }}
        SECRET_MANAGER_KEY: ${{ vars.SECRET_MANAGER_KEY }}
  # hotfix-deploy:
  #   needs: hotfix
  #   runs-on: ubuntu-latest
  #   environment: homol
  #   steps:
  #   - name: Flow Deploy
  #     uses: comexio/github-deploy-workflow@main
  #     with:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.CICD_AWS_KEY }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.CICD_AWS_SECRET }}
  #       AWS_REGION: ${{ secrets.CICD_AWS_REGION }}
  #       AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  #       ENV_FILE_PATH: ${{ secrets.ENV_FILE_PATH }}
  #       ENV_ENCRYPTION_PASSWORD: ${{ secrets.CICD_ENV_ENCRYPTION_PASSWORD }}
  #       ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  #       IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  #       DOCKERFILE_PATH: ${{ secrets.DOCKERFILE_PATH }}
  #       BASE_IMAGE: ${{ secrets.BASE_IMAGE }}
  #       DEPLOY_FILES: ${{ secrets.DEPLOY_FILES }}
  #       SERVER_LIST: ${{ secrets.SERVER_LIST }}
  #       SSH_USER: ubuntu
  #       SSH_KEY_FILE: ${{ secrets.CICD_SSH_KEY }}
  #       OVPN_CONFIG_FILE: ${{ secrets.OVPN_CONFIG_FILE_DEVOPS }}
  #       OVPN_CERT_PASS: ${{ secrets.OVPN_CERT_PASS_DEVOPS }}
  #       ORIGIN: hotfix
  #       GITHUB_TOKEN: ${{ secrets.LOGFLOW_CICD_WORKFLOWS }}
  #       SECRET_MANAGER_KEY: ${{ secrets.SECRET_MANAGER_KEY }}

  # rc-deploy:
  #   runs-on: ubuntu-latest
  #   environment: homol
  #   if: ${{ startsWith(github.ref, 'refs/heads/rc') }}
  #   steps:
  #   - name: Flow Deploy
  #     uses: comexio/github-deploy-workflow@main
  #     with:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.CICD_AWS_KEY }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.CICD_AWS_SECRET }}
  #       AWS_REGION: ${{ secrets.CICD_AWS_REGION }}
  #       AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  #       ENV_FILE_PATH: ${{ secrets.ENV_FILE_PATH }}
  #       ENV_ENCRYPTION_PASSWORD: ${{ secrets.CICD_ENV_ENCRYPTION_PASSWORD }}
  #       ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  #       IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  #       DOCKERFILE_PATH: ${{ secrets.DOCKERFILE_PATH }}
  #       BASE_IMAGE: ${{ secrets.BASE_IMAGE }}
  #       DEPLOY_FILES: ${{ secrets.DEPLOY_FILES }}
  #       SERVER_LIST: ${{ secrets.SERVER_LIST }}
  #       SSH_USER: ubuntu
  #       SSH_KEY_FILE: ${{ secrets.CICD_SSH_KEY }}
  #       OVPN_CONFIG_FILE: ${{ secrets.OVPN_CONFIG_FILE_DEVOPS }}
  #       OVPN_CERT_PASS: ${{ secrets.OVPN_CERT_PASS_DEVOPS }}
  #       ORIGIN: fc
  #       GITHUB_TOKEN: ${{ secrets.LOGFLOW_CICD_WORKFLOWS }}
  #       SECRET_MANAGER_KEY: ${{ secrets.SECRET_MANAGER_KEY }}

  # rc-prod-deploy:
  #   runs-on: ubuntu-latest
  #   environment: homol
  #   if: ${{ startsWith(github.ref, 'refs/heads/rc') }}
  #   steps:
  #   - name: Flow Deploy
  #     uses: comexio/github-deploy-workflow@main
  #     with:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.CICD_AWS_KEY }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.CICD_AWS_SECRET }}
  #       AWS_REGION: ${{ secrets.CICD_AWS_REGION }}
  #       AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  #       ENV_FILE_PATH: ${{ secrets.ENV_FILE_PATH }}
  #       ENV_ENCRYPTION_PASSWORD: ${{ secrets.CICD_ENV_ENCRYPTION_PASSWORD }}
  #       ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  #       IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  #       DOCKERFILE_PATH: ${{ secrets.DOCKERFILE_PATH }}
  #       BASE_IMAGE: ${{ secrets.BASE_IMAGE }}
  #       DEPLOY_FILES: ${{ secrets.DEPLOY_FILES }}
  #       SERVER_LIST: ${{ secrets.SERVER_LIST }}
  #       SSH_USER: ubuntu
  #       SSH_KEY_FILE: ${{ secrets.CICD_SSH_KEY }}
  #       OVPN_CONFIG_FILE: ${{ secrets.OVPN_CONFIG_FILE_DEVOPS }}
  #       OVPN_CERT_PASS: ${{ secrets.OVPN_CERT_PASS_DEVOPS }}
  #       ORIGIN: fc
  #       GITHUB_TOKEN: ${{ secrets.LOGFLOW_CICD_WORKFLOWS }}
  #       SECRET_MANAGER_KEY: ${{ secrets.SECRET_MANAGER_KEY }}

  # prod-deploy:
  #   runs-on: ubuntu-latest
  #   environment: prod
  #   if: ${{ startsWith(github.ref, 'refs/heads/main') }}
  #   steps:
  #   - name: Flow Deploy
  #     uses: comexio/github-deploy-workflow@main
  #     with:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.CICD_AWS_KEY }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.CICD_AWS_SECRET }}
  #       AWS_REGION: ${{ secrets.CICD_AWS_REGION }}
  #       AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  #       ENV_FILE_PATH: ${{ secrets.ENV_FILE_PATH }}
  #       ENV_ENCRYPTION_PASSWORD: ${{ secrets.CICD_ENV_ENCRYPTION_PASSWORD }}
  #       ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  #       IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  #       DOCKERFILE_PATH: ${{ secrets.DOCKERFILE_PATH }}
  #       BASE_IMAGE: ${{ secrets.BASE_IMAGE }}
  #       DEPLOY_FILES: ${{ secrets.DEPLOY_FILES }}
  #       SERVER_LIST: ${{ secrets.SERVER_LIST }}
  #       SSH_USER: ubuntu
  #       SSH_KEY_FILE: ${{ secrets.CICD_SSH_KEY }}
  #       OVPN_CONFIG_FILE: ${{ secrets.OVPN_CONFIG_FILE_DEVOPS }}
  #       OVPN_CERT_PASS: ${{ secrets.OVPN_CERT_PASS_DEVOPS }}
  #       ORIGIN: fc
  #       GITHUB_TOKEN: ${{ secrets.LOGFLOW_CICD_WORKFLOWS }}
  #       SECRET_MANAGER_KEY: ${{ secrets.SECRET_MANAGER_KEY }}